// Generated by CoffeeScript 1.12.7
(function() {
  var Battle, Pokemon, Trainer, pokemon;

  Pokemon = require('./src/pokemon');

  Trainer = require('./src/trainer');

  Battle = require('./src/battle');

  pokemon = {};

  pokemon.lookup = function(name) {
    var id, pkmn;
    name = name.toLowerCase();
    switch (false) {
      case name !== 'nidoran f':
        return 29;
      case name !== 'nidoran m':
        return 32;
      default:
        return ((function() {
          var ref, results;
          ref = Pokemon.pokedex;
          results = [];
          for (id in ref) {
            pkmn = ref[id];
            if (name === pkmn.name.toLowerCase()) {
              results.push(id);
            }
          }
          return results;
        })())[0];
    }
  };

  pokemon.battle = function(team1, team2) {
    var battle, i, j, len, len1, ref, ref1, trainer1, trainer2;
    if (!(team1 instanceof Object && !(team1 instanceof Array))) {
      team1 = {
        trainer: null,
        pokemon: team1
      };
    }
    if (!(team2 instanceof Object && !(team2 instanceof Array))) {
      team2 = {
        trainer: 'the foe',
        pokemon: team2
      };
    }
    if (!(team1.pokemon instanceof Array)) {
      team1.pokemon = [team1.pokemon];
    }
    if (!(team2.pokemon instanceof Array)) {
      team2.pokemon = [team2.pokemon];
    }
    trainer1 = new Trainer(team1.trainer);
    ref = team1.pokemon;
    for (i = 0, len = ref.length; i < len; i++) {
      pokemon = ref[i];
      trainer1.addPokemon(new Pokemon(pokemon));
    }
    trainer2 = new Trainer(team2.trainer);
    ref1 = team2.pokemon;
    for (j = 0, len1 = ref1.length; j < len1; j++) {
      pokemon = ref1[j];
      trainer2.addPokemon(new Pokemon(pokemon));
    }
    battle = new Battle(trainer1, trainer2);
    return battle.start().toString();
  };

  pokemon.build = function(pokemonId) {
    var move;
    pokemon = new Pokemon(pokemonId);
    return ((function() {
      var i, len, ref, results;
      ref = pokemon.moves;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        move = ref[i];
        results.push(move.toString());
      }
      return results;
    })()).join("\n").toString();
  };

  pokemon.buildDebug = function(pokemonId) {
    var move;
    pokemon = new Pokemon(pokemonId);
    return ((function() {
      var i, len, ref, results;
      ref = pokemon.debug.scoredMoves;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        move = ref[i];
        results.push(move.toString() + " " + move.score);
      }
      return results;
    })()).join("\n").toString();
  };

  module.exports = pokemon;

}).call(this);
